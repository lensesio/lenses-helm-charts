suite: enable provision and check the changes in deployment and secret
templates:
  - deployment.yaml
  - provision-secrets.yaml
  - secrets.yaml
tests:
  - it: should work with provision disabled (default mode)
    # set:
    #   lenses:
    #     provision:
    #       enabled: false
    asserts:
      - template: provision-secrets.yaml
        hasDocuments:
          count: 0
      - template: deployment.yaml
        notContains:
          path: spec.template.spec.volumes
          content:
            name: provision-secrets
            secret:
              secretName: RELEASE-NAME-provision
  - it: should work with provision yaml set
    set:
      lenses:
        provision:
          enabled: true
          version: "1"
          yaml:
            key: this is valid yaml
            values:
              - I can have an array
              - with 2 elelments
            moreValues: |-
              and a multiline
              text field
    asserts:
      - template: provision-secrets.yaml
        equal:
          path: stringData.provision\.yaml
          value: |-
            key: this is valid yaml
            moreValues: |-
              and a multiline
              text field
            values:
            - I can have an array
            - with 2 elelments
      - template: provision-secrets.yaml
        equal:
          path: stringData.LENSES_ADMIN_USER
          value: admin
      - template: provision-secrets.yaml
        equal:
          path: stringData.LENSES_ADMIN_PASSWORD
          value: admin
      - template: deployment.yaml
        contains:
          path: spec.template.spec.volumes
          content:
            name: provision-secrets
            secret:
              secretName: RELEASE-NAME-provision
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[1].name
          value: lenses-provision
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[1].command[2]
          value: |
            lenses-cli provision \
              --wait-for-lenses \
              --setup-mode \
              --host="http://localhost:3030" \
              --user="$LENSES_ADMIN_USER" \
              --pass="$LENSES_ADMIN_PASSWORD" \
              /mnt/provision-secrets/provision.yaml \
              --mode=sidecar
  - it: should work with provision yaml set and custom Lenses admin user/password
    set:
      lenses:
        provision:
          enabled: true
          version: "1"
          yaml:
            key: this is valid yaml
        security:
          defaultUser:
            username: foo
            password: bar
    asserts:
      - template: provision-secrets.yaml
        equal:
          path: stringData.LENSES_ADMIN_USER
          value: foo
      - template: provision-secrets.yaml
        equal:
          path: stringData.LENSES_ADMIN_PASSWORD
          value: bar
  - it: should fail with provision enabled but without a yaml value
    set:
      lenses:
        provision:
          enabled: true
          version: "1"
    asserts:
      - template: provision-secrets.yaml
        failedTemplate:
          errorMessage: provision.yaml is required to provision Lenses
  - it: should work with custom provision image
    set:
      lenses:
        provision:
          enabled: true
          version: "1"
          yaml:
            key: this is valid yaml
          sidecar:
            image:
              repository: example.com/cli
              tag: 0.0.1
              pullPolicy: IfNotPresent
    asserts:
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[1].image
          value: example.com/cli:0.0.1
      - template: deployment.yaml
        equal:
          path: spec.template.spec.containers[1].imagePullPolicy
          value: IfNotPresent
  - it: should work with provision secrets set
    set:
      lenses:
        provision:
          enabled: true
          version: "1"
          yaml:
            goo: loo
          secrets:
            stringData:
              foo1: bar1
              foo2: bar2
              foo3: bar3
            data:
              foo: YmFy
    asserts:
      - template: provision-secrets.yaml
        hasDocuments:
          count: 1
      - template: provision-secrets.yaml
        equal:
          path: stringData.foo1
          value: bar1
      - template: provision-secrets.yaml
        equal:
          path: data.foo
          value: YmFy

      - template: deployment.yaml
        contains:
          path: spec.template.spec.volumes
          content:
            name: provision-secrets
            secret:
              secretName: RELEASE-NAME-provision

  - it: should work when custom volumes and volume mounts are used to load additional plugins (UDFs) in Lenses
    set:
      lenses:
        provision:
          enabled: true
          version: "1"
          yaml:
            goo: loo
          sidecar:
            additionalVolumeMounts:
              - name: lenses-super-secrets
                mountPath: "/data/lenses-super-secrets"
      additionalVolumes:
        - name: secrets
          secret:
            secretName: lenses-super-secrets
    asserts:
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            name: lenses-super-secrets
            mountPath: "/data/lenses-super-secrets"
      - template: deployment.yaml
        contains:
          path: spec.template.spec.volumes
          content:
            name: secrets
            secret:
              secretName: lenses-super-secrets
