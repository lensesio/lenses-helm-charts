{{- if .Values.lenses.provision.enabled}}
kind: Secret
apiVersion: v1
metadata:
  name: {{include "provisionFullname" .}}
  labels:
    app: {{include "fullname" .}}
    chart: {{printf "%s-%s" .Chart.Name .Chart.Version}}
    release: {{.Release.Name}}
    heritage: {{.Release.Service}}
    lenses.io/app: {{include "fullname" .}}
    lenses.io/app.type: lenses-provision-secret
data:
{{- if .Values.lenses.provision.secrets}}
  {{- toYaml .Values.lenses.provision.secrets.data | nindent 2}}
{{- end}}
stringData:
{{- if .Values.lenses.provision.secrets}}
  {{- toYaml .Values.lenses.provision.secrets.stringData | nindent 2}}
{{- end}}
  {{- if and (eq .Values.lenses.provision.version "2") }}
  license.json: |-
    {{- toYaml (required "license.json is required to provision Lenses" .Values.lenses.provision.license) | nindent 4}}
  {{- end}}
  {{- if and (eq .Values.lenses.provision.version "2") }}
  provisioning.yaml: |-
    {{- toYaml (required "provisioning connections is required to provision Lenses" .Values.lenses.provision.connections) | nindent 4}}
  {{- end}}
  {{ if and (eq .Values.lenses.provision.version "1") }}
  provision.yaml: |-
    {{- toYaml (required "provision.yaml is required to provision Lenses" .Values.lenses.provision.yaml) | nindent 4}}
  {{- end}}
  LENSES_ADMIN_USER: {{default "admin" .Values.lenses.security.defaultUser.username | quote}}
  LENSES_ADMIN_PASSWORD: {{default "admin" .Values.lenses.security.defaultUser.password | quote}}
{{- end}}
